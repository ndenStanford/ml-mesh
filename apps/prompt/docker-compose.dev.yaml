version: "3.9"

services:
  backend:
    build:
      context: ../../
      dockerfile: apps/prompt/backend/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        APP_NAME: prompt
        APP_COMPONENT: backend
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG-v2023.3.2ÃŸ}
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/prompt-backend:${IMAGE_TAG:-latest}
    command:
      [
        "uvicorn",
        "src.app:app",
        "--host",
        "0.0.0.0",
        "--port",
        "4000",
        "--reload",
        "--log-level",
        "debug",
      ]
    profiles: ["backend"]
    volumes:
      - type: bind
        source: backend/src
        target: /apps/prompt/backend/src
      - type: bind
        source: backend/tests
        target: /apps/prompt/backend/tests
    ports:
      - "4000:4000"
    environment:
      ENVIRONMENT: dev
      OPENAI_API_KEY: ${OPENAI_API_KEY:-none}
      DOCS_URL: "/docs"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-anything}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-anything}
      API_KEY: 1234
      DB_HOST: "http://dynamodb:8000"
    depends_on:
      - dynamodb
    networks:
      - onclusive-net

  backend-unit:
    build:
      context: ../../
      dockerfile: apps/prompt/backend/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        APP_NAME: prompt
        APP_COMPONENT: backend
        BASE_IMAGE_TAG: v2023.3.2
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/prompt-backend:${IMAGE_TAG:-latest}
    command: ["pytest", "tests/unit", "-ra", "-vv", "--capture=no"]
    profiles: ["unit"]
    volumes:
      - type: bind
        source: backend/src
        target: /apps/prompt/backend/src
      - type: bind
        source: backend/tests
        target: /apps/prompt/backend/tests
    environment:
      ENVIRONMENT: dev
      OPENAI_API_KEY: ${OPENAI_API_KEY:-none}
      DOCS_URL: "/docs"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-anything}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-anything}
      API_KEY: 1234
      DB_HOST: "http://dynamodb:8000"
    networks:
      - onclusive-net

  backend-integration:
    build:
      context: ../../
      dockerfile: apps/prompt/backend/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        APP_NAME: prompt
        APP_COMPONENT: backend
        BASE_IMAGE_TAG: v2023.3.2
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/prompt-backend:${IMAGE_TAG:-latest}
    command: ["pytest", "tests/integration", "-ra", "-vv", "--capture=no"]
    profiles: ["integration"]
    volumes:
      - type: bind
        source: backend/src
        target: /apps/prompt/backend/src
      - type: bind
        source: backend/tests
        target: /apps/prompt/backend/tests
    environment:
      ENVIRONMENT: dev
      OPENAI_API_KEY: ${OPENAI_API_KEY:-none}
      DOCS_URL: "/docs"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-anything}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-anything}
      API_KEY: 1234
      DB_HOST: "http://dynamodb:8000"
    depends_on:
      - dynamodb
    networks:
      - onclusive-net

  dynamodb:
    image: instructure/dynamo-local-admin
    profiles: ["backend", "integration"]
    expose:
      - 8000
      - 8001
    ports:
      - 8000:8000
      - 8001:8001
    networks:
      - onclusive-net

networks:
  onclusive-net:
