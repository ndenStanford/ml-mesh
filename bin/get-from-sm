"""Populate .env file from secret manager secrets."""

import os

import click
import boto3


ROOT_DIR = os.path.dirname(
    os.path.dirname(
        os.path.realpath(__file__)
    )
)

def get_secret(secret_name: str, region: str) -> str:
    """Retrieves secret from secret manager."""

    session = boto3.Session()
    client = session.client(
        service_name='secretsmanager',
        region_name=region
    )

    get_secret_value_response = client.get_secret_value(
        SecretId=secret_name
    )

    # Decrypts secret using the associated KMS CMK.
    if 'SecretString' in get_secret_value_response:
        return get_secret_value_response['SecretString']
    raise NotImplementedError("""Binary secrets are not supported.
        Please set a Key Value secret.""")


def append_secrets_to_env_file(secret, value, prepend_with_export=True):
    ""
    export_keyword = "export "
    if not prepend_with_export:
        export_keyword = ""
        print("Export will not be prepended")

    if os.path.exists(os.path.join(ROOT_DIR, '.envrc')):
        writemode = 'a+'
    else:
        writemode = 'w+'

    file = open(os.path.join(ROOT_DIR, '.envrc'), writemode)
    escaped_value = value.translate(str.maketrans({
        "\"": "\\\"",
        "\n": ""
    }))
    file.write("{}{}=\"{}\"\n".format(export_keyword, secret, escaped_value))
    file.close()


@click.command()
@click.argument("secret")
@click.option(
    "--region",
    "-r",
    help="AWS region.",
    default="us-east-1"
)
def main(secret, region):
    append_secrets_to_env_file(secret, get_secret(secret, region))


if __name__ == "__main__":
    main()
