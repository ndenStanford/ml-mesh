"""Populate .env file from secret manager secrets."""

import os
import click
import getpass
import boto3
from botocore import errorfactory
#from botocore.errorfactory import ParameterNotFound


ROOT_DIR = os.path.dirname(
    os.path.dirname(
        os.path.realpath(__file__)
    )
)

def append_secrets_to_env_file(secret: str, value: str, prepend_with_export: bool = True, mode: str = "a+"):
    "Add secrets to environment file."
    export_keyword = "export "
    if not prepend_with_export:
        export_keyword = ""
        print("Export will not be prepended")

    file = open(os.path.join(ROOT_DIR, '.envrc'), mode)

    escaped_value = value.translate(str.maketrans({
        "\"": "\\\"",
        "\n": ""
    }))

    file.write("{}{}=\"{}\"\n".format(export_keyword, secret, escaped_value))
    file.close()

@click.command()
@click.option(
    "--profile",
    "-p",
    help="AWS account to select.",
    default="dev"
)
@click.option("--no-export", "-n", is_flag=True, help="Remove export from variable definition.",)
def main(profile: str, no_export: bool):

    append_secrets_to_env_file("AWS_PROFILE", profile, "w")
    append_secrets_to_env_file("AWS_ACCOUNT_ID", boto3.client('sts').get_caller_identity().get('Account'))
    append_secrets_to_env_file("IMAGE_TAG", boto3.client('sts').get_caller_identity().get('Arn').split("/")[-1])
    append_secrets_to_env_file("BASE_IMAGE_TAG", boto3.client('sts').get_caller_identity().get('Arn').split("/")[-1])
    for env_var, parameter in (
        ("API_KEY", '/mesh/dev/kong/ml-team/api-key'),
        ("entity_linking_onclusiveml_serving_betterstack_api_token", '/admin/dev/entity-linking/betterstack/key'),
        ("iptc_onclusiveml_serving_betterstack_api_token", '/admin/dev/iptc/betterstack/key'),
        ("lsh_onclusiveml_serving_betterstack_api_token",'/admin/dev/lsh/betterstack/key'),
        ("ner_onclusiveml_serving_betterstack_api_token",'/admin/dev/ner/betterstack/key'),
        ("prompt_backend_onclusiveml_serving_betterstack_api_token",'/admin/dev/prompt-backend/betterstack/key'),
        ("sentiment_onclusiveml_serving_betterstack_api_token",'/admin/dev/sentiment/betterstack/key'),
        ("test_onclusiveml_serving_betterstack_api_token",'/admin/dev/test/betterstack/key'),
        ("topic_summarization_onclusiveml_serving_betterstack_api_token",'/admin/dev/topic-summarization/betterstack/key'),
        ("topic_onclusiveml_serving_betterstack_api_token",'/admin/dev/topic/betterstack/key'),
        ("transcript_segmentation_onclusiveml_serving_betterstack_api_token",'/admin/dev/transcript-segmentation/betterstack/key'),
    ):

        try:
            append_secrets_to_env_file(env_var, boto3.client('ssm').get_parameter(Name=parameter)['Parameter']['Value'])
        except Exception:
            print(f"WARNING: Could not retrieve the parameter {parameter}. Environment variable {env_var} remains unset.")

if __name__ == "__main__":
    main()
