---
version : '3.9'

services:
  # =============================================
  # TRAIN
  # =============================================

  train:
    build:
      context: ../../
      dockerfile: projects/content-scoring/train/Dockerfile
      target: ${TARGET_BUILD_STAGE:-production}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: content-scoring
        COMPONENT: train
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG:-v24.1.1}
    volumes:
      - type: bind
        source: train/src
        target: /projects/content-scoring/train/src
      - type: bind
        source: train/data
        target: /projects/content-scoring/train/data
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/content-scoring-train:${IMAGE_TAG:-latest}
    command: [python, -m, src.train_model]
    profiles: [train]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: train/config/prod.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  train-unit:
    volumes:
      - type: bind
        source: train/
        target: /projects/content-scoring/train/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/content-scoring-train:${IMAGE_TAG}
    command: [pytest, tests/unit, -ra, -vv, --capture=no]
    profiles: [train, unit]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    hostname: onclusive-ml
    networks: [onclusive-net]

networks:
  onclusive-net:
