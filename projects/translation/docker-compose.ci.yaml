---
version : '3.9'

services:
  # =============================================
  # SERVE
  # =============================================
  serve:
    build:
      context: ../../
      dockerfile: projects/translation/serve/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: translation
        COMPONENT: serve
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG:-v24.6.2}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/translation-serve:${IMAGE_TAG}
    command: [python, -m, src.serve.__main__]
    env_file: serve/config/${DEPLOYMENT:-prod}.env
    profiles: [serve, functional]
    ports:
      - 8000:8000
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    hostname: onclusiveml
    networks:
      - onclusive-net
    healthcheck:
      test: [CMD, curl, -f, http://serve:8000/translation/v1/ready]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s


  serve-unit:
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/translation-serve:${IMAGE_TAG}
    command: [pytest, tests/unit, -ra, -vv, --capture=no]
    profiles: [unit]
    hostname: onclusiveml
    environment:
      ONCLUSIVEML_SERVING_LOGCONFIG_JSON_FORMAT: false
    env_file: serve/config/${DEPLOYMENT:-prod}.env
    networks:
      - onclusive-net

  serve-functional:
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/translation-serve:${IMAGE_TAG}
    command: [pytest, tests/functional, -ra, -vv, --capture=no]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: serve/config/${DEPLOYMENT:-prod}.env
    profiles: [functional]
    hostname: onclusiveml
    networks:
      - onclusive-net
    depends_on:
      serve:
        condition: service_healthy

networks:
  onclusive-net:
