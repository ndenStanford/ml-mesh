---
version : '3.9'

services:
  # =============================================
  # TRAIN
  # =============================================

  train:
    build:
      context: ../../
      dockerfile: projects/ner/train/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        PROJECT: ner
        COMPONENT: train
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG:-v2023.3.2}
    ports:
      - 8888:8888
    volumes:
      - type: bind
        source: train/src
        target: /home/projects/ner/train/src
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-train:${IMAGE_TAG:-latest}
    command: [python, -m, src.register_trained_model]
    profiles: [train]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    hostname: onclusive-ml
    networks: [onclusive-net]

  train-unit:
    build:
      context: ../../
      dockerfile: projects/ner/train/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        PROJECT: ner
        COMPONENT: train
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG:-v2023.3.2}
    volumes:
      - type: bind
        source: train/src
        target: /projects/ner/train/src
      - type: bind
        source: train/tests
        target: /projects/ner/train/tests
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-train:${IMAGE_TAG:-latest}
    command: [pytest, tests/unit, -ra, -vv, --capture=no, -s]
    profiles: [unit]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    hostname: onclusive-ml
    networks: [onclusive-net]

  # =============================================
  # COMPILE
  # =============================================

  compile:
    build:
      context: ../../
      dockerfile: projects/ner/compile/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-063759612765}
        PROJECT: ner
        COMPONENT: compile
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG:-v2023.3.2}
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG:-latest}
    profiles: [compile, unit, integration, pipeline]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-unit:
    volumes:
      - type: bind
        source: compile/src
        target: /projects/ner/compile/src
      - type: bind
        source: compile/tests
        target: /projects/ner/compile/tests
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG}
    command: [pytest, tests/unit, -ra, -vv, --capture=no, -s]
    profiles: [unit]
    hostname: onclusive-ml
    networks: [onclusive-net]
    depends_on:
      - compile

  compile-download-model:
    volumes:
      - type: bind
        source: compile/
        target: /projects/ner/compile/
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG}
    command: [python, -m, src.download_uncompiled_model]
    profiles: [pipeline]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      IO_OUTPATH: /projects/ner/compile/outputs
      ONCLUSIVEML_TRACKING_LOGGER_LEVEL: 10 # 10=DEBUG
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]
    depends_on:
      - compile

  compile-compile-model:
    devices:
      - /dev/neuron0:/dev/neuron0
    volumes:
      - type: bind
        source: compile
        target: /projects/ner/compile
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG}
    command: [python, -m, src.compile_model]
    profiles: [pipeline]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      IO_OUTPATH: /projects/ner/compile/outputs
      ONCLUSIVEML_TRACKING_LOGGER_LEVEL: 10
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]
    depends_on:
      - compile

  compile-validate-model:
    devices:
      - /dev/neuron0:/dev/neuron0
    volumes:
      - type: bind
        source: compile
        target: /projects/ner/compile
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG}
    command: [python, -m, pytest, src/test_compiled_model, -ra, -vvv, --full-trace, --tb=long, --capture=no, -s]
    profiles: [pipeline]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      IO_OUTPATH: /projects/ner/compile/outputs
      ONCLUSIVEML_TRACKING_LOGGER_LEVEL: 10
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]
    depends_on:
      - compile

  compile-upload-model:
    volumes:
      - type: bind
        source: compile
        target: /projects/ner/compile
    image: ${AWS_ACCOUNT_ID:-063759612765}.dkr.ecr.us-east-1.amazonaws.com/ner-compile:${IMAGE_TAG}
    command: [python, -m, src.upload_compiled_model]
    profiles: [pipeline]
    environment:
      NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      IO_OUTPATH: /projects/ner/compile/outputs
      GITHUB_REPOSITORY: development-repository
      GITHUB_ACTOR: development-actor
      GITHUB_ENV: development-env
      GITHUB_WORKFLOW: development-workflow
      GITHUB_JOB: development-job
      GITHUB_REF: development-ref
      GITHUB_BASE_REF: development-base-ref
      GITHUB_HEAD_REF: development-head-ref
      GITHUB_SHA: development-sha
      GITHUB_EVENT_NAME: development-event-name
      GITHUB_RUN_ID: development-run-id
      GITHUB_RUN_NUMBER: development-run-number
      RUNNER_ARCH: development-arch
      RUNNER_NAME: development-name
      RUNNER_OS: development-os
      ONCLUSIVEML_TRACKING_BACKEND_USE_S3_BACKEND: yes
      ONCLUSIVEML_TRACKING_LOGGER_LEVEL: 10
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]
    depends_on:
      - compile

networks:
  onclusive-net:
