---

services:
  # =============================================
  # TRAIN
  # =============================================

  train:
    volumes:
      - type: bind
        source: train/src
        target: /projects/keywords/train/src
    build:
      context: ../../
      dockerfile: projects/keywords/train/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: train
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-train:${IMAGE_TAG:-latest}
    command: [python, -m, src.train_model]
    profiles: [train]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: train/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  train-debug:
    build:
      context: ../../
      dockerfile: projects/keywords/train/Dockerfile
      target: ${TARGET_BUILD_STAGE:-debugger}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: train
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-train:${IMAGE_TAG:-latest}
    command: [python, -m, debugpy, --listen, 0.0.0.0:5678, --wait-for-client, -m, src.train_model]
    ports:
      - 5678:5678
    profiles: [debug]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: train/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  train-unit:
    volumes:
      - type: bind
        source: train/
        target: /projects/keywords/train/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-train:${IMAGE_TAG}
    command: [python, -m, pytest, tests/unit, -ra, -vv, --capture=no]
    profiles: [train, unit]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    env_file: train/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  # =============================================
  # COMPILE
  # =============================================

  compile:
    devices:
      - /dev/neuron0:/dev/neuron0
    volumes:
      - type: bind
        source: compile/src
        target: /projects/keywords/compile/src
      - type: bind
        source: ${HOME}/data
        target: /projects/keywords/compile/models
    build:
      context: ../../
      dockerfile: projects/keywords/compile/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: compile
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG:-latest}
    command: [python, -m, src.compile]
    profiles: [compile, unit, integration, pipeline]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-debug:
    devices:
      - /dev/neuron0:/dev/neuron0
    build:
      context: ../../
      dockerfile: projects/keywords/compile/Dockerfile
      target: ${TARGET_BUILD_STAGE:-debugger}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: compile
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG:-latest}
    command:
      - /bin/sh
      - -c
      - |
        python -m src.download
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m src.compile
    ports:
      - 5678:5678
    profiles: [debug]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-unit:
    volumes:
      - type: bind
        source: compile/src
        target: /projects/keywords/compile/src
      - type: bind
        source: ${HOME}/data
        target: /projects/keywords/compile/models
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG}
    command: [python, -m, pytest, tests/unit, -ra, -vv, --capture=no]
    env_file: compile/config/dev.env
    profiles: [unit]
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-download-model:
    volumes:
      - type: bind
        source: compile/src
        target: /projects/keywords/compile/src
      - type: bind
        source: ${HOME}/data
        target: /projects/keywords/compile/models
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG}
    command: [python, -m, src.download]
    profiles: [pipeline]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-validate-model:
    devices:
      - /dev/neuron0:/dev/neuron0
    volumes:
      - type: bind
        source: compile/src
        target: /projects/keywords/compile/src
      - type: bind
        source: ${HOME}/data
        target: /projects/keywords/compile/models
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG}
    command: [python, -m, pytest, src/test_compiled_model, -ra, -vvv, --full-trace, --tb=long, --capture=no]
    profiles: [pipeline]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  compile-upload-model:
    volumes:
      - type: bind
        source: compile/src
        target: /projects/keywords/compile/src
      - type: bind
        source: ${HOME}/data
        target: /projects/keywords/compile/models
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-compile:${IMAGE_TAG}
    command: [python, -m, src.upload]
    profiles: [pipeline]
    environment:
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    env_file: compile/config/dev.env
    hostname: onclusive-ml
    networks: [onclusive-net]

  # =============================================
  # SERVE
  # =============================================

  # serving image
  serve:
    devices:
      - /dev/neuron0:/dev/neuron0
    volumes:
      - type: bind
        source: serve/
        target: /projects/keywords/serve/
    build:
      context: ../../
      dockerfile: projects/keywords/serve/Dockerfile
      target: ${TARGET_BUILD_STAGE:-development}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: serve
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    profiles: [serve, functional, load]
    command: [python, -m, src.serve.__main__]
    env_file: serve/config/dev.env
    ports:
      - 8000:8000
    hostname: onclusiveml
    networks:
      - onclusive-net
    healthcheck:
      test: [CMD, curl, -f, http://serve:8000/keywords/v1/ready]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s

  serve-debug:
    devices:
      - /dev/neuron0:/dev/neuron0
    build:
      context: ../../
      dockerfile: projects/keywords/serve/Dockerfile
      target: ${TARGET_BUILD_STAGE:-debugger}
      network: host
      args:
        AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-690763002009}
        PROJECT: keywords
        COMPONENT: serve
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    profiles: [debug]
    command:
      - /bin/sh
      - -c
      - |
        python -m src.util.download_compiled_model
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m src.serve.__main__
    ports:
      - 5678:5678
      - 8000:8000
    env_file: serve/config/dev.env
    hostname: onclusiveml
    networks:
      - onclusive-net

  # utility service: downloading the compiled model artifact that will be served
  serve-download-model:
    volumes:
      - type: bind
        source: serve/
        target: /projects/keywords/serve/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    command: [python, -m, src.util.download_compiled_model]
    profiles: [serve, integration, functional, load]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      ONCLUSIVEML_NEPTUNE_API_TOKEN: ${NEPTUNE_API_TOKEN}
      NEPTUNE_CLIENT_MODE: read-only
    env_file: serve/config/dev.env
    hostname: onclusiveml
    networks:
      - onclusive-net

  # unit tests
  # - do NOT include model artifact
  # - do NOT include REST model server process
  serve-unit:
    volumes:
      - type: bind
        source: serve/
        target: /projects/keywords/serve/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    command: [python, -m, pytest, tests/unit, -ra, -vv, --capture=no]
    profiles: [unit]
    hostname: onclusiveml
    networks:
      - onclusive-net

  # integration tests
  # - include model artifact
  # - do NOT include REST model server process
  serve-integration:
    devices:
      - /dev/neuron0:/dev/neuron0 # needs to be different from the `serve` service device
    volumes:
      - type: bind
        source: serve/
        target: /projects/keywords/serve/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    command: [python, -m, pytest, tests/integration, -ra, -vv, --capture=no]
    env_file: serve/config/dev.env
    profiles: [integration]
    hostname: onclusiveml
    networks:
      - onclusive-net

  # functional tests
  # - include model artifact
  # - include REST model server process
  serve-functional:
    volumes:
      - type: bind
        source: serve/
        target: /projects/keywords/serve/
    image: ${AWS_ACCOUNT_ID:-690763002009}.dkr.ecr.us-east-1.amazonaws.com/keywords-serve:${IMAGE_TAG}
    command: [python, -m, pytest, tests/functional, -ra, -vv, --capture=no]
    env_file: serve/config/dev.env
    profiles: [functional]
    hostname: onclusiveml
    networks:
      - onclusive-net
    depends_on:
      serve:
        condition: service_healthy

networks:
  onclusive-net:
