name: Deployment Workflow
on:
  push:
    branches:
      - prod

concurrency:
  cancel-in-progress: true
  group: Deployment ${{ github.ref_name }}

jobs:
  # ===============================================
  # QUALITY CHECKS
  # ===============================================
  code-quality-checks:
    name: Run Pre-Commit Checks
    uses: ./.github/workflows/_code-quality.yaml
    with:
      environment: ${{ github.ref_name }}
      pull-request: false
      timeout: 10

  # ===============================================
  # DRAFT RELEASE NOTES
  # ===============================================
  run-tag:
    name: Tag Repository Release.
    runs-on: ubuntu-20.04
    needs: [code-quality-checks]
    outputs:
      tag: ${{ steps.release-drafter.outputs.tag_name }}
      name: ${{ steps.release-drafter.outputs.name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get next version
        id: get-version
        uses: reecetech/version-increment@2022.10.3
        with:
          scheme: calver

      - uses: release-drafter/release-drafter@v5.22.0
        id: release-drafter
        with:
          config-name: release-drafter.yaml
          publish: true
          commitish: ${{ github.ref_name }}
          prerelease: false
          tag: "v${{ steps.get-version.outputs.version }}"
          name: "${{ steps.get-version.outputs.version }}"
          version: "${{ steps.get-version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ===============================================
  # TEST LIBS
  # ===============================================

  run-libs-tests:
    name: Run libraries unit and integration tests.
    runs-on: ubuntu-20.04
    needs: [run-tag]
    strategy:
      matrix:
        python-version: ["3.8.16"]
        poetry-version: ["1.3.2"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install libs dependencies
        run: |
          make libs.install-all

      - name: Run lib unit tests
        run: make libs.test-all

  # NOTE: runtime of this pipeline is going to grow with the number of projects
  # TODO: @sreza1 optimize runtime of this succession of jobs.

  # ===============================================
  # DOCKER
  # ===============================================
  run-docker:
    name: Build and Push Core Docker Images.
    uses: ./.github/workflows/_core-docker.yaml
    needs: [run-tag, run-libs-tests]
    strategy:
      max-parallel: 1
      matrix:
        image:
          [
            python-base,
            neuron-inference,
            kubeflow-jupyter,
            kubeflow-torch-cpu,
            kubeflow-data-science,
            fastapi-serve,
          ]
        validate-build: [false]
        include:
          - image: neuron-compile
            validate-build: true
    with:
      environment: ${{ github.ref_name }}
      image: ${{ matrix.image }}
      tag: "${{ needs.run-tag.outputs.tag }}"
      pull-request: false
      validate-build: ${{ matrix.validate-build }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  # ===============================================
  # PROJECTS
  # ===============================================

  run-projects:
    name: Build and Deploy Project Components.
    uses: ./.github/workflows/_projects.yaml
    needs: [run-tag, run-libs-tests, run-docker]
    strategy:
      max-parallel: 10
      matrix:
        poetry-version: ["1.3.2"]
        projects:
          # NOTE: list of project components to run

          # ========================
          # KEYBERT
          # ========================
          # serve
          - name: keybert
            component: serve
            integration: false
            python-version: "3.8.16"

    with:
      environment: "${{ github.ref_name }}"
      project: "${{ matrix.projects.name }}"
      component: "${{ matrix.projects.component }}"
      tag: "${{ needs.run-tag.outputs.tag }}"
      integration: "${{ matrix.projects.integration }}"
      python-version: "${{ matrix.projects.python-version }}"
      poetry-version: "${{ matrix.poetry-version }}"
      pull-request: false
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
