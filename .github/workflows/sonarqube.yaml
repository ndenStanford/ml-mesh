---
name: SonarQube
on  :
  push:
    branches:
      - develop
      - chore/include-llms-in-test-coverage
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8.16]
        poetry-version: [1.3.2]
        lib: [compile, core, data, models, nlp, serving, tracking, hashing, llms]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clean up Docker
        run: |
          docker system prune -f
          docker volume prune -f
      - name: Clean up unused files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /tmp/*
          sudo rm -rf /var/tmp/*
      - name: Install test coverage utils
        run: pip install coverage
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install lib dependencies and generate test coverage for libs
        run: |
          make libs.install/${{ matrix.lib }}
          make libs.coverage-unit/${{ matrix.lib }}
      - name: Generate test coverage xml
        run: |
          poetry run coverage combine .coverage-*
          poetry run coverage xml --omit=*/tests/*
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
