---
name: SonarQube

on  :
  push:
    branches:
      - develop
      - feature/sonarqube
  pull_request:
    branches:
      - develop
    types:
      - ready_for_review
      - opened
      - synchronize
      - reopened
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8.16]
        poetry-version: [1.3.2]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install coverage utils
        run: |
          pip install coverage
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install lib dependencies
        run: make libs.install-all
      - name: Generate coverage for libs
        run: |
          make libs.coverage-unit-all
      - name: Generate coverage xml
        run: |
          poetry run coverage combine .coverage-*
          poetry run coverage xml
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
