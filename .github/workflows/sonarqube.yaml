---
name: SonarQube (Optional)
on  :
  push:
    branches:
      - develop
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get python version
        id: get-python
        run: |
          echo "::set-output name=version::$(cat .python-version)"

      - name: Get poetry version
        id: get-poetry
        run: |
          echo "::set-output name=version::$(cat .poetry-version)"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.get-python.outputs.version }}

      - name: Free up disk space
        run: |
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rfv \
            /usr/local/lib/android \
            /usr/share/dotnet \
            /opt/ghc \
            /usr/local/share/powershell \
            /usr/share/swift \
            /usr/local/.ghcup \
            /usr/lib/jvm \
            /var/lib/apt/lists/*

      - name: Install test coverage utils
        run: pip install coverage==7.5.4

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ steps.get-poetry.outputs.version }}

      - name: Install lib dependencies
        run: make libs.install-all-covered

      - name: Generate test coverage for libs
        run: make libs.coverage-unit-all

      - name: Generate test coverage xml
        run: |
          poetry run coverage combine .coverage-*
          poetry run coverage xml --omit=*/tests/*

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
