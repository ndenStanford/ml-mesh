---
name: Model Training
on  :
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment where code is deployed [prod, stage]
      project:
        required: true
        type: string
        description: Project.
      tag:
        required: true
        type: string
        description: Version tag of image providing the compilation runtime context.
    secrets:
      AWS_ACCOUNT_ID:
        required: true
        description: AWS account ID.
      AWS_DEFAULT_REGION:
        required: true
        description: AWS account region
      AWS_ACCESS_KEY_ID:
        required: true
        description: AWS access key ID.
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: AWS secret access key
      GH_PERSONAL_ACCESS_TOKEN:
        required: true
        description: Github PAT to allow EC2 instance to connect to Github repository content.
      NEPTUNE_API_TOKEN:
        required: true
        description: The API token for the neptune service account managing the model registry.

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: files-changed
        name: Get a list of modified files.
        with:
          list-files: shell
          filters: |
            this:
              - added | modified: 'libs/${{ inputs.lib }}/**'

      - name: Setup Python
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Setup Poetry
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ inputs.poetry-version }}

      - name: Install mesh dependencies
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: make install

      - name: Run unit tests
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: make libs.unit/${{ inputs.lib }}

      - name: Run integration tests
        if: ${{ ( inputs.integration && inputs.release || steps.files-changed.outputs.this == 'true' ) && inputs.integration }}
        run: make libs.integration/${{ inputs.lib }}

      - name: Run functional tests
        if: ${{ ( inputs.functional && inputs.release || steps.files-changed.outputs.this == 'true' ) && inputs.functional }}
        run: make libs.functional/${{ inputs.lib }}
