---
name: Run Code Quality Checks
on  :
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment where code is deployed [prod, dev]
      pull-request:
        required: true
        default: true
        type: boolean
        description: Indicates whether this worfklow is running for a Pull Request.
      timeout:
        default: 30
        type: number
        description: Pre-commit checks timeout in minutes.
      poetry-version:
        required: false
        type: string
        description: Poetry version.
    secrets:
      AWS_DEFAULT_REGION:
        required: true
        description: AWS account region
      AWS_ACCESS_KEY_ID:
        required: true
        description: AWS access key ID.
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: AWS secret access key

jobs:
  pre-commits:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        if: ${{ inputs.pull-request }}
        id: files-changed
        name: Get a list of modified files.
        with:
          list-files: shell
          filters: |
            all:
              - added | modified: '**'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: false

      - name: Install python dependencies
        run: |
          poetry install

      # - name: Code Quality Checks For Changed Files
      #   if: ${{ inputs.pull-request }}
      #   id: pre-commit
      #   timeout-minutes: ${{ inputs.timeout }}
      #   uses: pre-commit/action@v3.0.1
      #   with:
      #     extra_args: --verbose --files ${{ steps.files-changed.outputs.all_files }}

      # - name: Code Quality Checks For All Files
      #   if: ${{ !inputs.pull-request || inputs.release }}
      #   id: pre-commit-all
      #   timeout-minutes: ${{ inputs.timeout }}
      #   uses: pre-commit/action@v3.0.1
      #   with:
      #     extra_args: --verbose --all
