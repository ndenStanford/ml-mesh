---
name: Run Code Quality Checks
on  :
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment where code is deployed [prod, stage]
      pull-request:
        required: true
        default: true
        type: boolean
        description: Indicates whether this worfklow is running for a Pull Request.
      timeout:
        default: 30
        type: number
        description: Pre-commit checks timeout in minutes.
    secrets:
      AWS_DEFAULT_REGION:
        required: true
        description: AWS account region
      AWS_ACCESS_KEY_ID:
        required: true
        description: AWS access key ID.
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: AWS secret access key

jobs:
  pre-commits:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        if: ${{ inputs.pull-request }}
        id: files-changed
        name: Get a list of modified files.
        with:
          list-files: shell
          filters: |
            all:
              - added | modified: '**'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version

      - name: Code Quality Checks For Changed Files
        if: ${{ inputs.pull-request }}
        id: pre-commit
        timeout-minutes: ${{ inputs.timeout }}
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --verbose --files ${{ steps.files-changed.outputs.all_files }}

      - name: Code Quality Checks For All Files
        if: ${{ !inputs.pull-request || inputs.release }}
        id: pre-commit-all
        timeout-minutes: ${{ inputs.timeout }}
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --verbose --all

  upload-bootstrap:
    runs-on: ubuntu-20.04
    needs: [pre-commits]
    environment: ${{ inputs.environment }}
    if: ${{ !inputs.pull-request }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload bootstrap script to S3
        run: aws s3 cp ./bin/bootstrap/linux s3://installation-script-dev/
