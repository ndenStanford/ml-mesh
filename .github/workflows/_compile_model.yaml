name: Model Compilation
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment where code is deployed [prod, stage]"
      project:
        required: true
        type: string
        description: "Project."
      tag:
        required: true
        type: string
        description: "Version tag of image providing the compilation runtime context."
      pull-request:
        required: true
        default: true
        type: boolean
        description: "Indicates whether this workflow is running for a Pull Request."
      self-hosted-runner-type:
        required: false
        default: inf1.6xlarge
        type: string
        description: "Which EC2 instance type to provide as a self hosted runner."
    secrets:
      AWS_ACCOUNT_ID:
        required: true
        description: "AWS account ID."
      AWS_DEFAULT_REGION:
        required: true
        description: "AWS account region"
      AWS_ACCESS_KEY_ID:
        required: true
        description: "AWS access key ID."
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: "AWS secret access key"
      AWS_ROLE_TO_ASSUME:
        required: true
        description: "AWS IAM role to assume."
      GH_PERSONAL_ACCESS_TOKEN:
        required: true
        description: "Github PAT to allow EC2 instance to connect to Github repository content."

jobs:
  setup-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.TF_VAR_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: DeployManifests

      - name: Check inputs
        run: |
          echo Project input: ${{ inputs.project }}
          echo Image tag input: ${{ inputs.tag }}
          echo AWS account id: ${{ secrets.AWS_ACCOUNT_ID }}
          echo AWS default region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-04b40c32c6992d916
          ec2-instance-type: ${{ inputs.self-hosted-runner-type }}
          subnet-id: subnet-0eb8ac7d02ae29e38
          security-group-id: sg-00def06a1c2518854
          # iam-role-name: ${{ secrets.AWS_ROLE_TO_ASSUME }} # optional, requires additional permissions
          # TODO: add timestamp and environment name to the instance name
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ml-ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "Environment", "Value": "dev"},
              {"Key": "Stack", "Value": "mesh"},
              {"Key": "Billing", "Value": "ML"}
            ]
  set-image-reference:
    name: Set container runtime image
    runs-on: ubuntu-latest
    outputs:
      image-reference: ${{ steps.set-image-reference.outputs.image-reference}}

    steps:
      - name: Check inputs
        run: |
          echo Project input: ${{ inputs.project }}
          echo Image tag input: ${{ inputs.tag }}
          echo AWS account id: ${{ secrets.AWS_ACCOUNT_ID }}
          echo AWS default region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Export versioned image reference
        id: set-image-reference
        #run: echo "image-reference=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ inputs.project }}-compile:${{ inputs.tag}}" >> "$GITHUB_OUTPUT"
        run: echo image-reference="${{ secrets.AWS_ACCOUNT_ID }}".dkr.ecr."${{ secrets.AWS_DEFAULT_REGION }}".amazonaws.com/${{ inputs.project }}:${{ inputs.tag}} >> $GITHUB_OUTPUT
      - name: Check versioned image reference
        run: echo "Using image ${{ steps.set-image-reference.outputs.image-reference }}"

  register-compiled-model:
    name: Compile and register a base or trained model
    needs:
      - setup-runner
      - set-image-reference
    runs-on: ${{ needs.start-runner.outputs.label }}
    container:
      image: ${{ needs.set-image-reference.outputs.image-reference }} # works!
    steps:
      - name: Download uncompiled model
        run: |
          echo 'Downloading Uncompiled Model'
          #python -m src.download_uncompiled_model
      - name: Compile Model
        run: |
          echo 'Compiling Model'
          #python -m src.compile_model
      - name: Validate Compiled Model
        run: |
          echo 'Validating Compiled Model'
          #python -m src.validate_compiled_model
      - name: Upload Compiled Model
        run: |
          echo 'Uploading Compiled Model'
          #python -m src.upload_compiled_model
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - setup-runner
      - register-compiled-model

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.TF_VAR_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: DeployManifests
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.setup-runner.outputs.label }}
          ec2-instance-id: ${{ needs.setup-runner.outputs.ec2-instance-id }}
