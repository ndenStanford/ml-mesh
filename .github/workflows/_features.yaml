---
name: Features Registration
on  :
  workflow_call:
    inputs:
      test:
        required: true
        default: true
        type: boolean
        description: Whether to run test.
      python-version:
        required: false
        type: string
        description: Python version.
      poetry-version:
        required: false
        type: string
        description: Poetry version.
      release:
        required: true
        default: true
        type: boolean
        description: If false, run only when there are changes in the code, otherwise always run it.
      apply-max-attempts:
        type: number
        default: 2
        description: Number of attempts to deploy manifests to cluster.
      apply-retry-wait-seconds:
        type: number
        default: 30
        description: Time (in  seconds) between attempts.
    secrets:
      ONCLUSIVEML_FEATURE_STORE_MYSQL_PASSWORD:
        required: true
        description: MySQL database password.

jobs:
  deploy:
    name: 'Install & test library: ${{ inputs. lib }}'
    runs-on: ubuntu-22.04

    env:
      ONCLUSIVEML_FEATURE_STORE_MYSQL_PASSWORD: ${{ secrets.ONCLUSIVEML_FEATURE_STORE_MYSQL_PASSWORD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: files-changed
        name: Get a list of modified files.
        with:
          list-files: shell
          filters: |
            this:
              - added | modified: 'features/**'

      - name: Setup Python
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Setup Poetry
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        uses: snok/install-poetry@v1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: false

      - name: Install lib dependencies
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: ${{ inputs.apply-max-attempts }}
          retry_wait_seconds: ${{ inputs.apply-retry-wait-seconds }}
          timeout_minutes: 10
          command: make features.install

      - name: Run tests
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: make features.test
