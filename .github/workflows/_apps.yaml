---
name: Apps
on  :
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: Environment where code is deployed [prod, stage]
      app:
        required: true
        type: string
        description: App name.
      component:
        required: true
        type: string
        description: Component to build, test and deploy [frontend, backend]
      tag:
        required: true
        type: string
        description: Version tag of image.
      integration:
        required: true
        default: true
        type: boolean
        description: Whether to run integrations.
      release:
        required: true
        default: true
        type: boolean
        description: If false, only the app components that have been changed are ran, otherwise every app component is ran.
    secrets:
      AWS_ACCOUNT_ID:
        required: true
        description: AWS account ID.
      AWS_DEFAULT_REGION:
        required: true
        description: AWS account region
      AWS_ACCESS_KEY_ID:
        required: true
        description: AWS access key ID.
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: AWS secret access key

jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment: ${{ inputs.environment }}
    env:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: files-changed
        name: Get a list of modified files.
        with:
          list-files: shell
          filters: |
            this:
              - added | modified: 'apps/${{ inputs.app }}/${{ inputs.component }}/**'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get ECR credentials | ${{ inputs.environment }} ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: make docker.login AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}"

      - name: Build App Docker Image | ${{ inputs.environment }}  ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: |
          make apps.build/${{ inputs.app }} COMPONENT=${{ inputs.component }} \
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}" \
          IMAGE_TAG="${{ inputs.tag }}" \
          TARGET_BUILD_STAGE="development" \
          PLATFORM=linux/amd64 \
          ENVIRONMENT="ci"

      - name: Run app component unit tests | ${{ inputs.environment }} ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: |
          make apps.unit/${{ inputs.app }} COMPONENT=${{ inputs.component }} \
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}" \
          IMAGE_TAG="${{ inputs.tag }}" \
          TARGET_BUILD_STAGE="development" \
          PLATFORM=linux/amd64 \
          ENVIRONMENT="ci"

      - name: Run app component integration tests | ${{ inputs.environment }}  ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ ( inputs.release || steps.files-changed.outputs.this == 'true' ) && inputs.integration }}
        run: |
          make apps.integration/${{ inputs.app }} COMPONENT=${{ inputs.component }} \
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}" \
          IMAGE_TAG="${{ inputs.tag }}" \
          TARGET_BUILD_STAGE="development" \
          PLATFORM=linux/amd64 \
          ENVIRONMENT="ci"

      - name: Build Docker Image | ${{ inputs.environment }}  ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: |
          make apps.build/${{ inputs.app }} COMPONENT=${{ inputs.component }} \
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}" \
          IMAGE_TAG="${{ inputs.tag }}" \
          TARGET_BUILD_STAGE="production" \
          PLATFORM=linux/amd64 \
          ENVIRONMENT="ci" \
          USE_DOCKER_CACHE=true

      - name: Push Docker image with version | ${{ inputs.environment }}  ${{ inputs.app }}-${{ inputs.component }}
        if: ${{ inputs.release || steps.files-changed.outputs.this == 'true' }}
        run: |
          make apps.deploy/${{ inputs.app }} COMPONENT=${{ inputs.component }} \
          AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}" \
          IMAGE_TAG="${{ inputs.tag }}" \
          ENVIRONMENT="ci"
