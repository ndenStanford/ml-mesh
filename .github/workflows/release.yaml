---
name: ML-Mesh Draft Release

on  :
  schedule:
    - cron: 0 14 * * WED
  issues:
    types:
      - opened

jobs:

  run-repository-state:
    name: Get Repository metadata
    uses: ./.github/workflows/_repository-state.yaml
    if: ${{ github.event_name == 'schedule' || startsWith(github.event.issue.title, '[RELEASE]:') }}
    with:
      pull-request: false
      environment: stage
      publish: false
    secrets:
      GITHUB_TOKEN_: ${{ secrets.GITHUB_TOKEN }}

  run-get-version:
    name: Draft a new release
    if: ${{ github.event_name == 'schedule' || startsWith(github.event.issue.title, '[RELEASE]:') }}
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    environment: stage
    needs: [run-repository-state]

    steps:

      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          ref: prod

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match-version
        if: ${{ startsWith(github.event.issue.title, '[RELEASE]:') }}
        with:
          text: ${{ github.event.issue.title }}
          regex: (\d+\.)?(\d+\.)?(\*|\d+)$

      - name: Check release version is correct
        id: check-release-version
        if: ${{ startsWith(github.event.issue.title, '[RELEASE]:') }}
        run: |
          if [[ "${{ needs.run-repository-state.outputs.tag }}" != "v${{ steps.regex-match-version.outputs.match }}" ]]; then
              echo "Version is not valid, expected ${{ needs.run-repository-state.outputs.tag }} but got ${{ steps.regex-match-version.outputs.match }}"
              exit 1
          fi

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Reset promotion branch
        run: |
          git fetch origin stage:stage
          git reset --hard stage

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          committer: GitHub <noreply@github.com>
          branch: release/${{ needs.run-repository-state.outputs.version }}
          title: ML-PLATFORM RELEASE ${{ needs.run-repository-state.outputs.tag }}
          body: ''
          labels: |
            release
