---
name: Repository state
on  :
  workflow_call:
    inputs:
      pull-request:
        required: true
        default: true
        type: boolean
        description: Indicates whether this workflow is running for a Pull Request.
      push-target-branch:
        required: true
        type: string
      pull-request-target-branch:
        required: true
        type: string
      # target-branch:
      #   required: false
      #   type: string
      #   default: main
      #   description: Release target branch.
      # prerelease:
      #   required: false
      #   type: boolean
      #   default: false
      #   description: If true a pre-release is created.
      # publish:
      #   required: false
      #   type: boolean
      #   default: true
      #   description: If true a pre-release is created.
      # include-pre-releases:
      #   required: false
      #   type: boolean
      #   default: false
      #   description: Include pre releases as "full" releases when drafting release notes.
    secrets:
      GITHUB_TOKEN_:
        required: true
        description: Github Token to interact with repo.
    outputs:
      target-branch:
        description: The generalized target branch for the pull request or push event.
        value: ${{ jobs.get-release-specs.outputs.target-branch }}
        type: string
      release:
        description: Whether this is a full release or not. Evaluates to `False` for pre-releases, too.
        value: ${{ jobs.get-release-specs.outputs.release-flag }}
        type: boolean
      tag:
        description: Final tag to attach to images built within the workflow
        value: ${{ jobs.get-stage.outputs.tag }}
        type: string
      release-notes:
        description: (Pre-)release notes derived based on specified configuration
        value: ${{ jobs.get-stage.outputs.release-notes}}
        type: string

jobs:
  get-release-specs:
    runs-on: ubuntu-20.04
    environment: ${{ inputs.environment }}
    outputs:
      target-branch: ${{ steps.toggle-target-branch.outputs.value }}
      release-flag: ${{ steps.toggle-release-flag.outputs.value }}

    steps:
      - name: Resolve generalized target branch
        uses: haya14busa/action-cond@v1
        id: toggle-target-branch
        with:
          cond: ${{ !inputs.pull-request }}
          if_true: ${{ inputs.push-target-branch }}
          if_false: ${{ inputs.pull-request-target-branch }}

      - name: Show generalized target branch
        run: |
          echo Push target branch: ${{ inputs.push-target-branch }}
          echo Pull request target branch: ${{ inputs.pull-request-target-branch }}
          echo Target branch: ${{ steps.toggle-target-branch.outputs.value }}

      - name: Resolve release flag based on target branch
        uses: haya14busa/action-cond@v1
        id: toggle-release-flag
        with:
          cond: ${{ steps.toggle-target-branch == 'main' }}
          if_true: true
          if_false: false

      - name: Show release flag
        run: |
          echo Target branch: ${{ steps.toggle-target-branch }}
          echo Release flag: ${{ steps.toggle-release-flag.outputs.value }}

  get-stage:
    runs-on: ubuntu-20.04
    needs: [get-release-specs]
    environment: ${{ inputs.environment }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_ }}
    outputs:
      tag: ${{ steps.export-tag.outputs.tag }}
      release-notes: ${{ steps.release-drafter.outputs.body }}

    steps:
      - name: Print out github event
        run: |
          echo ${{ github.event_name }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Export current working directory
        id: export-working-dir
        run: |
          echo "workdir=$GITHUB_WORKSPACE" >> $GITHUB_OUTPUT

      - name: Tag Pull Request
        uses: TimonVS/pr-labeler-action@v4
        if: ${{ inputs.pull-request }}
        with:
          configuration-path: .github/pr-labeler.yaml

      - name: Lookup current version
        id: version-lookup
        run: ${{ steps.export-working-dir.outputs.workdir }}/bin/actions/version-lookup
        shell: bash

      - name: Get next version
        id: version-increment
        if: ${{ !inputs.pull-request }}
        run: ${{ steps.export-working-dir.outputs.workdir }}/bin/actions/version-increment
        shell: bash
        env:
          current_version: ${{ steps.version-lookup.outputs.CURRENT_VERSION }}
          #is_pre_release: ${{ inputs.prerelease }}
          is_pre_release: ${{ needs.get-release-specs.outputs.target-branch != 'main' }}

      - name: Get short commit SHA
        id: get-commit-sha
        if: ${{ inputs.pull-request }}
        run: |
          sha=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})
          echo "tag=ci-$sha" >> $GITHUB_OUTPUT

      - name: Export tag
        id: export-tag
        run: |
          if [[ ${{ inputs.pull-request }} = true ]]; then
            echo "tag=ci-${{ github.run_id }}" >> $GITHUB_OUTPUT
          else
            echo "tag=v${{ steps.version-increment.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Generate Release Notes
        uses: release-drafter/release-drafter@v5.24.0
        if: ${{ !inputs.pull-request }}
        id: release-drafter
        with:
          config-name: release-drafter.yaml
          #publish: ${{ inputs.publish }}
          publish: ${{ needs.get-release-specs.outputs.release == 'true' }}
          #commitish: ${{ inputs.target-branch }}
          commitish: ${{ needs.get-release-specs.outputs.target-branch }}
          #prerelease: ${{ inputs.prerelease }}
          prerelease: ${{ needs.get-release-specs.outputs.release == 'false' }}
          tag: ${{ steps.version-increment.outputs.version }}
          name: ${{ steps.version-increment.outputs.version }}
          version: ${{ steps.version-increment.outputs.version }}
          #include-pre-releases: ${{ inputs.include-pre-releases }}
          include-pre-releases: ${{ needs.get-release-specs.outputs.release == 'false' }}
