---
name: Repository state
on  :
  workflow_call:
    inputs:
      event-name:
        required: true
        type: string
        description: Can take the three values 'pull_request', 'push', or 'release_issue'.
      push-target-branch:
        required: false
        type: string
        default: ''
        description: The branch that is being pushed to in case of a `push` github event, same as `github.ref_name`.
      pull-request-target-branch:
        required: true
        type: string
        description: The branch that is beinged pulled into in case of a `pull-request` github event, e.g same as `github.base_ref`.
      verbose:
        required: false
        default: true
        type: boolean
        description: If true, this flow shows a relevant set of github action vars relevant to its logic. Useful for debugging.
    secrets:
      GITHUB_TOKEN_:
        required: true
        description: Github Token to interact with repo.
    outputs:
      target-branch:
        description: The generalized target branch for the pull request or push event.
        value: ${{ jobs.get-repository-state.outputs.release-target-branch }}
      tag:
        description: Final tag to attach to images built within the workflow
        value: ${{ jobs.get-repository-state.outputs.tag }}
      release-notes:
        description: (Pre-)release notes derived based on specified configuration
        value: ${{ jobs.get-repository-state.outputs.release-notes}}

jobs:

  check-github-state:
    name: Check github refs
    runs-on: ubuntu-latest
    if: ${{ inputs.verbose }}

    steps:
      - name: Show all relevant github action context vars
        run: |
          echo github.ref_name: ${{ github.ref_name }}
          echo github.event_name: ${{ github.event_name }}
          echo "github.base_ref (PR only):" ${{ github.base_ref }}
          echo "github.head_ref (PR only):" ${{ github.head_ref }}
          echo github.ref: ${{ github.ref }}
          echo github.type: ${{ github.type }}

  get-repository-state:
    name: Get repository release state
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_ }}
    outputs:
      target-branch: ${{ steps.toggle-target-branch.outputs.value }}
      tag: ${{ steps.export-tag.outputs.value }}
      release-notes: ${{ steps.release-drafter.outputs.body }}

    steps:

      - name: Check out code
        uses: actions/checkout@v3

      - name: Resolve generalized target branch
        uses: haya14busa/action-cond@v1
        id: toggle-target-branch
        with:
          cond: ${{ inputs.event-name != 'push' }}
          if_true: ${{ inputs.pull-request-target-branch }}
          if_false: ${{ inputs.push-target-branch }}

      - name: Show target branch
        run: |
          echo Input event name: ${{ inputs.event-name }}
          echo Push target branch: ${{ inputs.push-target-branch }}
          echo Pull request target branch: ${{ inputs.pull-request-target-branch }}
          echo Target branch: ${{ steps.toggle-target-branch.outputs.value }}

      - name: Export current working directory
        id: export-working-dir
        run: |
          echo "workdir=$GITHUB_WORKSPACE" >> $GITHUB_OUTPUT

      - name: Tag Pull Request
        uses: TimonVS/pr-labeler-action@v4
        if: ${{ inputs.event-name == 'pull_request' }}
        with:
          configuration-path: .github/pr-labeler.yaml

      - name: Lookup current version
        id: version-lookup
        run: ${{ steps.export-working-dir.outputs.workdir }}/bin/actions/version-lookup
        shell: bash

      - name: Get next version
        id: version-increment
        run: ${{ steps.export-working-dir.outputs.workdir }}/bin/actions/version-increment
        shell: bash
        env:
          current_version: ${{ steps.version-lookup.outputs.CURRENT_VERSION }}
          is_pre_release: ${{ steps.toggle-target-branch.outputs.value == 'develop' }}

      # # Deprecated/replaced by export-tag step below. To be discussed as commit shas might
      # # be better to use here to check the content of the versioned docker containers
      # - name: Get short commit SHA
      #   id: get-commit-sha
      #   if: ${{ inputs.event-name == 'pull_request' }}
      #   run: |
      #     sha=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})
      #     echo "tag=ci-$sha" >> $GITHUB_OUTPUT

      - name: Export tag
        id: export-tag
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ inputs.event-name == 'pull_request' }}
          if_true: ci-${{ github.run_id }}
          if_false: ${{ steps.version-increment.outputs.version }}

      - name: Generate (Draft) Release
        uses: release-drafter/release-drafter@v5.24.0
        id: release-drafter
        with:
          config-name: release-drafter.yaml
          publish: ${{ inputs.event-name == 'push' }}
          commitish: ${{ steps.toggle-target-branch.outputs.value }}
          prerelease: ${{ steps.toggle-target-branch.outputs.value == 'develop' }}
          tag: ${{ steps.version-increment.outputs.version }}
          name: ${{ steps.version-increment.outputs.version }}
          version: ${{ steps.version-increment.outputs.version }}

      - name: Remove Draft release
        uses: liudonghua123/delete-release-action@v1
        id: release-draft-remover
        if: ${{ inputs.event-name != 'push' }}
        with:
          release_name: ${{ steps.release-drafter.outputs.name }}
